version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: onllib-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=OnlineLib123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - onllib-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P OnlineLib123! -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Online Library Application
  onllib-app:
    build: .
    container_name: onllib-app
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://sqlserver:1433;databaseName=OnlineLibrary;encrypt=false;trustServerCertificate=true
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=OnlineLib123!
    ports:
      - "8080:8080"
    volumes:
      - onllib_storage:/app/storage
      - onllib_keys:/app/keys
      - onllib_logs:/app/logs
    networks:
      - onllib-network
    depends_on:
      sqlserver:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: onllib-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - onllib-network
    depends_on:
      - onllib-app
    restart: unless-stopped

volumes:
  sqlserver_data:
    driver: local
  onllib_storage:
    driver: local
  onllib_keys:
    driver: local
  onllib_logs:
    driver: local

networks:
  onllib-network:
    driver: bridge
